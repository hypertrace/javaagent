def groovyVer = "2.5.11"
def spockGroovyVer = groovyVer.replaceAll(/\.\d+$/, '')

// this is only needed for the working against unreleased otel-java snapshots
configurations.all {
  resolutionStrategy.cacheChangingModulesFor 12, 'hours'
}

ext {
  versions = [

    slf4j             : "1.7.30",
    guava             : "30.1-jre",

    spock             : "1.3-groovy-$spockGroovyVer",
    groovy            : groovyVer,
    logback           : "1.2.3",

    // TODO(anuraaga): Switch off of milestones, this version fixes compatibility with Spock Unroll
    junit5            : "5.7.0-M1"
  ]

  deps = [

    // General
    slf4j                        : "org.slf4j:slf4j-api:${versions.slf4j}",

    // Testing

    spock                        : [
      dependencies.create("org.spockframework:spock-core:${versions.spock}", {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
      }),
      // Used by Spock for mocking:
      dependencies.create(group: 'org.objenesis', name: 'objenesis', version: '3.1')
    ],
    groovy                       : "org.codehaus.groovy:groovy-all:${versions.groovy}",
    testcontainers               : "org.testcontainers:testcontainers:1.15.0-rc2",
    testLogging                  : [
      dependencies.create(group: 'ch.qos.logback', name: 'logback-classic', version: versions.logback),
      dependencies.create(group: 'org.slf4j', name: 'log4j-over-slf4j', version: versions.slf4j),
      dependencies.create(group: 'org.slf4j', name: 'jcl-over-slf4j', version: versions.slf4j),
      dependencies.create(group: 'org.slf4j', name: 'jul-to-slf4j', version: versions.slf4j),
    ]
  ]
}
