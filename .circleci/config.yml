version: 2.1

commands:
  setup_build_environment:
    description: "Checkout, update submodules, restore the cache, and setup docker"
    steps:
      - checkout
      - run:
          name: Generate cache key
          command: find . -type f -name "*.gradle*" -o -name "gradle-wrapper*" -exec shasum {} + | sort > /tmp/checksum.txt && cat /tmp/checksum.txt
      - run: make init-submodules
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "/tmp/checksum.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
  populate_and_save_cache:
    description: "Downloads all gradle dependencies and uploads cache for later use"
    steps:
      - run: ./gradlew downloadDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "/tmp/checksum.txt" }}

jobs:
  build:
    docker:
      - image: cimg/openjdk:11.0
    working_directory: ~/repo
    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx1g
      TERM: dumb
    steps:
      - setup_build_environment
      - populate_and_save_cache
      - run: make build

  smoke-test:
    # For testcontainers.org
    machine:
      image: ubuntu-1604:202007-01
    working_directory: ~/repo
    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx1g
      TERM: dumb
    steps:
      - setup_build_environment
      - populate_and_save_cache
      - run: make smoke-test

  muzzle:
    docker:
      - image: cimg/openjdk:11.0
    working_directory: ~/repo
    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx1g
      TERM: dumb
    steps:
      - setup_build_environment
      - run: make muzzle

  release-bintray-publish:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - setup_build_environment
      - run: echo "Releasing version" && ./gradlew printVersion
      - run: ./gradlew publish
      - run:
          name: "Copy artifacts to workspace"
          command: |
            mkdir artifacts
            cp javaagent/build/libs/*-all.jar artifacts/hypertrace-agent-all.jar
      - persist_to_workspace:
          root: .
          paths:
            - artifacts

  release-github-publish:
    docker:
      - image: cibuilds/github:0.13
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Publish Release on GitHub"
          command: |
            ghr -t ${GH_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -n "Release ${CIRCLE_TAG}" -b "..." --soft ${CIRCLE_TAG} ./artifacts/

workflows:
  version: 2
  build-and-publish:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - smoke-test:
          filters:
            tags:
              only: /.*/
      - muzzle:
          filters:
            tags:
              only: /.*/
      - release-bintray-publish:
          context: hypertrace-publishing
          requires:
            - build
            - muzzle
            - smoke-test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+/
      - release-github-publish:
          context: hypertrace-publishing
          requires:
            - release-bintray-publish
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+/
